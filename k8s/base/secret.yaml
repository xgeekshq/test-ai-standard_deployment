# apiVersion: v1
# kind: Secret
# metadata:
#   name: test-ai-standard-dev-secrets
# type: Opaque
# stringData:
#   # data values are base64 encoded ($ echo value | base64 )
#   NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_dG9nZXRoZXItY2hhbW9pcy04NC5jbGVyay5hY2NvdW50cy5kZXYk
#   CLERK_SECRET_KEY: sk_test_2V5mWumMWiFuRG2dbgp7DUjEw51DEPMMCMjDqSZZhE
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: test-ai-standard-external-secret
  namespace: idp-dev
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: eso-azure-secret-store
  # target = describes the secret that shall be created
  target: # is the kind: Secret to be created using the values fetched from our Cloud Secret Store
    name: test-ai-standard-secrets # secret name to be created (default is metadata.name)
  #   creationPolicy: Owner # opts: Owner | Merge | None
  #   deletionPolicy: Retain # opts: Delete | Merge | Retain = what to do with this if the provider secret gets deleted.
  # #
  # from where to fetch data...
  ### in this case will read from a secret in azure, with json content (multiple keys in one secret)
  dataFrom:
    - extract:
        key: geekathon-ai-template-secrets # will generate individual keys in destination k8s secret
#
